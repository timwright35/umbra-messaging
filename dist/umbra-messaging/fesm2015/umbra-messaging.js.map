{"version":3,"file":"umbra-messaging.js","sources":["ng://umbra-messaging/lib/shared/classes/toast-ref.ts","ng://umbra-messaging/lib/shared/classes/toast-config.ts","ng://umbra-messaging/lib/shared/animations/toast-fade.animation.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.component.ts","ng://umbra-messaging/lib/shared/services/umbra-toast.service.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.module.ts","ng://umbra-messaging/lib/shared/interfaces/toast-config.interface.ts"],"sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\r\n\r\nexport class ToastRef {\r\n    constructor(private readonly overlay: OverlayRef) { }\r\n\r\n    close() {\r\n        this.overlay.dispose();\r\n    }\r\n\r\n    isVisible() {\r\n        return this.overlay && this.overlay.overlayElement;\r\n    }\r\n\r\n    getPosition() {\r\n        return this.overlay.overlayElement.getBoundingClientRect();\r\n    }\r\n}\r\n","import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\r\nimport { ToastType } from '../types/toast.type';\r\n\r\nexport class ToastData {\r\n    type: ToastType;\r\n    text?: string;\r\n    template?: TemplateRef<any>;\r\n    templateContext?: {};\r\n}\r\n\r\nexport const defaultToastConfig: ToastConfigInterface = {\r\n    position: {\r\n        top: 20,\r\n        right: 20,\r\n    },\r\n    animation: {\r\n        fadeOut: 2500,\r\n        fadeIn: 300,\r\n    },\r\n    toastData: {\r\n        type: 'success'\r\n    }\r\n};\r\n\r\nexport const TOAST_CONFIG_TOKEN = new InjectionToken<ToastConfigInterface>('toast-config');\r\n","import {\r\n    AnimationTriggerMetadata,\r\n    trigger,\r\n    state,\r\n    transition,\r\n    style,\r\n    animate,\r\n} from '@angular/animations';\r\n\r\nexport const toastAnimations: {\r\n    readonly fadeToast: AnimationTriggerMetadata;\r\n} = {\r\n    fadeToast: trigger('fadeAnimation', [\r\n        state('default', style({ opacity: 1 })),\r\n        transition('void => *', [style({ opacity: 0 }), animate('{{ fadeIn }}ms')]),\r\n        transition(\r\n            'default => closing',\r\n            animate('{{ fadeOut }}ms', style({ opacity: 0 })),\r\n        ),\r\n    ]),\r\n};\r\n\r\nexport type ToastAnimationState = 'default' | 'closing';\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n    ToastData\r\n} from '../shared/classes/toast-config';\r\nimport { ToastRef } from '../shared/classes/toast-ref';\r\nimport {\r\n    toastAnimations,\r\n    ToastAnimationState\r\n} from '../shared/animations/toast-fade.animation';\r\nimport { AnimationEvent } from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'umbra-messaging-toast',\r\n    templateUrl: './umbra-toast.component.html',\r\n    styleUrls: [ './umbra-toast.component.css' ],\r\n    animations: [ toastAnimations.fadeToast ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UmbraToastComponent implements OnInit, OnDestroy {\r\n    animationState: ToastAnimationState = 'default';\r\n    iconType: string;\r\n\r\n    private intervalId: number;\r\n\r\n    constructor(\r\n        readonly data: ToastData,\r\n        readonly ref: ToastRef\r\n    ) {\r\n        this.iconType = data.type === 'success' ? 'done' : data.type;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.intervalId = setTimeout(() => this.animationState = 'closing', 5000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearTimeout(this.intervalId);\r\n    }\r\n\r\n    close() {\r\n        this.ref.close();\r\n    }\r\n\r\n    onFadeFinished(event: AnimationEvent) {\r\n        const {toState} = event;\r\n        const isFadeOut = (toState as ToastAnimationState) === 'closing';\r\n        const itFinished = this.animationState === 'closing';\r\n\r\n        if (isFadeOut && itFinished) {\r\n            this.close();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Inject,\r\n    Injectable,\r\n    Injector\r\n} from '@angular/core';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport {\r\n    ComponentPortal,\r\n    PortalInjector\r\n} from '@angular/cdk/portal';\r\nimport { ToastRef } from '../classes/toast-ref';\r\nimport {\r\n    defaultToastConfig,\r\n    ToastData\r\n} from '../classes/toast-config';\r\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\r\nimport { UmbraToastComponent } from '../../umbra-toast/umbra-toast.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UmbraToastService {\r\n    private lastToast: ToastRef;\r\n    private toastConfig: ToastConfigInterface;\r\n\r\n    constructor(\r\n        private overlay: Overlay,\r\n        private parentInjector: Injector\r\n    ) {}\r\n\r\n    showToast(toastConfig: ToastConfigInterface) {\r\n        console.log('Config', toastConfig);\r\n        if (toastConfig === null || toastConfig === undefined) {\r\n            this.toastConfig = defaultToastConfig;\r\n        }\r\n\r\n        const positionStrategy = this.getPositionStrategy();\r\n        const overlayRef = this.overlay.create({positionStrategy});\r\n\r\n        const toastRef = new ToastRef(overlayRef);\r\n\r\n        const injector = this.getInjector(toastConfig.toastData, toastRef,\r\n            this.parentInjector);\r\n        const toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\r\n\r\n        overlayRef.attach(toastPortal);\r\n\r\n        return toastRef;\r\n    }\r\n\r\n    getPositionStrategy() {\r\n        return this.overlay.position()\r\n            .global()\r\n            .top(this.getPosition())\r\n            .right(this.toastConfig.position.right + 'px');\r\n    }\r\n\r\n    getPosition() {\r\n        const lastToastIsVisible = this.lastToast && this.lastToast.isVisible();\r\n        const position = lastToastIsVisible\r\n            ? this.lastToast.getPosition().bottom\r\n            : this.toastConfig.position.top;\r\n\r\n        return position + 'px';\r\n    }\r\n\r\n    getInjector(data: ToastData, toastRef: ToastRef, parentInjector: Injector) {\r\n        const tokens = new WeakMap();\r\n\r\n        tokens.set(ToastData, data);\r\n        tokens.set(ToastRef, toastRef);\r\n\r\n        return new PortalInjector(parentInjector, tokens);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UmbraToastComponent } from './umbra-toast.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n    declarations: [ UmbraToastComponent ],\r\n    imports: [\r\n        CommonModule,\r\n        OverlayModule,\r\n        MatIconModule\r\n    ],\r\n    entryComponents: [ UmbraToastComponent ]\r\n})\r\nexport class UmbraToastModule {}\r\n","import { ToastData } from '../classes/toast-config';\r\n\r\nexport interface ToastConfigInterface {\r\n    position?: {\r\n        top: number;\r\n        right: number;\r\n    };\r\n    animation?: {\r\n        fadeOut: number;\r\n        fadeIn: number;\r\n    };\r\n    toastData: ToastData;\r\n}\r\n"],"names":[],"mappings":"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"}