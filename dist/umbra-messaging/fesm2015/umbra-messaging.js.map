{"version":3,"file":"umbra-messaging.js","sources":["ng://umbra-messaging/lib/shared/classes/toast-ref.ts","ng://umbra-messaging/lib/shared/classes/toast-config.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.component.html","ng://umbra-messaging/lib/umbra-toast/umbra-toast.component.ts","ng://umbra-messaging/lib/shared/classes/common-functions.ts","ng://umbra-messaging/lib/shared/services/umbra-toast.service.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.module.ts","ng://umbra-messaging/lib/umbra-inline/umbra-inline.component.html","ng://umbra-messaging/lib/umbra-inline/umbra-inline.component.ts","ng://umbra-messaging/lib/umbra-inline/umbra-inline.module.ts","ng://umbra-messaging/public-api.ts","ng://umbra-messaging/umbra-messaging.ts"],"sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\r\n\r\nexport class ToastRef {\r\n    private overlayRef: OverlayRef;\r\n\r\n    constructor(private readonly overlay: OverlayRef) {\r\n        this.overlayRef = overlay;\r\n    }\r\n\r\n    close() {\r\n        this.overlay.dispose();\r\n    }\r\n\r\n    isVisible() {\r\n        return this.overlay && this.overlay.overlayElement;\r\n    }\r\n\r\n    getPosition() {\r\n        return this.overlay.overlayElement.getBoundingClientRect();\r\n    }\r\n}\r\n","import {\r\n    ElementRef,\r\n    TemplateRef\r\n} from '@angular/core';\r\nimport { ToastType } from '../types/toast.type';\r\nimport { VerticalPositionType } from '../types/vertical-position.type';\r\nimport { HorizontalPositionType } from '../types/horizontal-position.type';\r\n\r\nexport class ToastData {\r\n    type: ToastType;\r\n    text?: string;\r\n    template?: TemplateRef<any>;\r\n    templateContext?: {};\r\n}\r\n\r\nexport class ToastConfig {\r\n    verticalPosition: VerticalPositionType;\r\n    horizontalPosition: HorizontalPositionType;\r\n    attachToElement?: ElementRef;\r\n    closable?: boolean;\r\n    timeout?: number;\r\n    position?: {\r\n        top?: number;\r\n        bottom?: number;\r\n        left?: number;\r\n        right?: number;\r\n    };\r\n    toastData: ToastData;\r\n}\r\n\r\nexport const defaultToastConfig: ToastConfig = {\r\n    verticalPosition: 'top',\r\n    horizontalPosition: 'right',\r\n    closable: true,\r\n    position: {},\r\n    toastData: {\r\n        type: 'success'\r\n    }\r\n};\r\n\r\nexport const DEFAULT_MARGIN = 25;\r\n","<ng-container *ngIf=\"data.toastData.text; else templateRef\">\r\n    <mat-progress-bar [value]=\"progressBarValue\" *ngIf=\"data.timeout\"></mat-progress-bar>\r\n    <div #toast fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div class=\"toast-data-icon\" fxLayout=\"column\" fxLayoutAlign=\"center center\" #dataIcon>\r\n            <mat-icon>{{ iconType }}</mat-icon>\r\n        </div>\r\n        <div class=\"toast-text\" fxLayout=\"column\" fxLayoutAlign=\"center center\" #text>\r\n            {{ data.toastData.text }}\r\n        </div>\r\n        <div class=\"toast-close-icon\" fxLayout=\"column\" fxLayoutAlign=\"center center\" #closeIcon>\r\n            <mat-icon (click)=\"close()\" *ngIf=\"data.closable\">close</mat-icon>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-template #templateRef>\r\n    <ng-container *ngTemplateOutlet=\"data.toastData.template; context: data.toastData.templateContext\">\r\n    </ng-container>\r\n</ng-template>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy,\r\n    Renderer2,\r\n    ViewChild,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { UmbraToastService } from '../shared/services/umbra-toast.service';\r\nimport { ToastRef } from '../shared/classes/toast-ref';\r\nimport { ToastConfig } from '../shared/classes/toast-config';\r\nimport { isDefAndNotNull } from 'lib/lib/shared/classes/common-functions';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'umbra-messaging-toast',\r\n    templateUrl: './umbra-toast.component.html',\r\n    styleUrls: [ './umbra-toast.component.css' ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UmbraToastComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    iconType: string;\r\n    private toastConfig: ToastConfig;\r\n    progressBarValue: number;\r\n\r\n    @ViewChild('toast', {static: false}) toast: ElementRef;\r\n    @ViewChild('dataIcon', {static: false}) dataIcon: ElementRef;\r\n    @ViewChild('closeIcon', {static: false}) closeIcon: ElementRef;\r\n    @ViewChild('text', {static: false}) text: ElementRef;\r\n\r\n    constructor(\r\n        readonly data: ToastConfig,\r\n        readonly toastRef: ToastRef,\r\n        private renderer: Renderer2,\r\n        private umbraToastService: UmbraToastService,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {\r\n        this.toastConfig = data;\r\n        this.iconType = data.toastData.type === 'success' ? 'done' : data.toastData.type;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (isDefAndNotNull(this.data.timeout)) {\r\n            this.progressBarValue = 100;\r\n            const timeoutSub$ = interval(1000).subscribe((seconds) => {\r\n                this.progressBarValue = 100 - seconds * 100 / (this.data.timeout / 1000);\r\n                this.changeDetectorRef.markForCheck();\r\n\r\n                if (seconds >= (this.data.timeout / 1000)) {\r\n                    this.close();\r\n                    timeoutSub$.unsubscribe();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderer.addClass(this.toast.nativeElement, 'toast');\r\n        this.renderer.addClass(this.toast.nativeElement,\r\n            'toast-type-' + this.toastConfig.toastData.type);\r\n        this.renderer.addClass(this.dataIcon.nativeElement,\r\n            'toast-data-icon-' + this.toastConfig.toastData.type);\r\n        this.renderer.addClass(this.closeIcon.nativeElement,\r\n            'toast-close-icon-' + this.toastConfig.toastData.type);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // NO-OP.\r\n    }\r\n\r\n    close() {\r\n        this.umbraToastService.closeToast(this.toastRef);\r\n    }\r\n}\r\n","export function isDefAndNotNull(value: any) {\r\n    return value !== undefined && value !== null;\r\n}\r\n","import {\r\n    Injectable,\r\n    Injector\r\n} from '@angular/core';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport {\r\n    ComponentPortal,\r\n    PortalInjector\r\n} from '@angular/cdk/portal';\r\nimport { ToastRef } from '../classes/toast-ref';\r\nimport {\r\n    DEFAULT_MARGIN,\r\n    defaultToastConfig,\r\n    ToastConfig\r\n} from '../classes/toast-config';\r\nimport { UmbraToastComponent } from '../../umbra-toast/umbra-toast.component';\r\nimport { isDefAndNotNull } from '../classes/common-functions';\r\n\r\n@Injectable()\r\nexport class UmbraToastService {\r\n    private openTopToasts: Array<ToastRef> = [];\r\n    private openBottomToasts: Array<ToastRef> = [];\r\n\r\n    constructor(private overlay: Overlay,\r\n                private parentInjector: Injector) {}\r\n\r\n    showToast(toastConfig: ToastConfig) {\r\n        if (toastConfig === null || toastConfig === undefined) {\r\n            toastConfig = defaultToastConfig;\r\n        }\r\n\r\n        const overlayPosition = this.getOverlayPosition(toastConfig);\r\n        const overlayRef = this.overlay.create({positionStrategy: overlayPosition});\r\n        const toastRef = new ToastRef(overlayRef);\r\n\r\n        if (toastConfig.verticalPosition === 'top') {\r\n            this.openTopToasts.push(toastRef);\r\n        }\r\n\r\n        if (toastConfig.verticalPosition === 'bottom') {\r\n            this.openBottomToasts.push(toastRef);\r\n        }\r\n\r\n        const injector = this.getInjector(toastConfig, toastRef,\r\n            this.parentInjector);\r\n        const toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\r\n\r\n        overlayRef.attach(toastPortal);\r\n\r\n        return toastRef;\r\n    }\r\n\r\n    closeToast(toastRef: ToastRef) {\r\n        this.openTopToasts = this.openTopToasts.filter((openToast: ToastRef) => {\r\n            if (openToast !== toastRef) {\r\n                return openToast;\r\n            }\r\n        });\r\n        this.openBottomToasts = this.openBottomToasts.filter((openToast: ToastRef) => {\r\n            if (openToast !== toastRef) {\r\n                return openToast;\r\n            }\r\n        });\r\n        toastRef.close();\r\n    }\r\n\r\n    closeAllToasts() {\r\n        [...this.openTopToasts, ...this.openBottomToasts].forEach((toastRef: ToastRef) => {\r\n            toastRef.close();\r\n        });\r\n        this.openBottomToasts = [];\r\n        this.openTopToasts = [];\r\n    }\r\n\r\n    private getInjector(data: ToastConfig, toastRef: ToastRef, parentInjector: Injector) {\r\n        const tokens = new WeakMap();\r\n        tokens.set(ToastConfig, data);\r\n        tokens.set(ToastRef, toastRef);\r\n        return new PortalInjector(parentInjector, tokens);\r\n    }\r\n\r\n    private getOverlayPosition(toastConfig: ToastConfig) {\r\n        const overlayPosition = this.overlay.position().global();\r\n        if (toastConfig.verticalPosition === 'center') {\r\n            overlayPosition.centerVertically();\r\n        } else {\r\n            if (toastConfig.verticalPosition === 'top') {\r\n                let lastTopToastHeight = 0;\r\n                let lastTopToast: ToastRef;\r\n                if (this.openTopToasts.length > 0) {\r\n                    lastTopToast = this.openTopToasts[this.openTopToasts.length - 1];\r\n                }\r\n                if (isDefAndNotNull(lastTopToast)) {\r\n                    lastTopToastHeight = lastTopToast.getPosition().height;\r\n                }\r\n                let calculatedPosition: number;\r\n                if (toastConfig.position.top) {\r\n                    calculatedPosition = (this.openTopToasts.length * lastTopToastHeight) +\r\n                        toastConfig.position.top;\r\n                } else {\r\n                    calculatedPosition = (this.openTopToasts.length * lastTopToastHeight);\r\n                }\r\n                overlayPosition.top(calculatedPosition + 'px');\r\n            }\r\n\r\n            if (toastConfig.verticalPosition === 'bottom') {\r\n                let lastBottomToastHeight = 0;\r\n                let lastBottomToast: ToastRef;\r\n                if (this.openBottomToasts.length > 0) {\r\n                    lastBottomToast = this.openBottomToasts[this.openBottomToasts.length - 1];\r\n                }\r\n                if (isDefAndNotNull(lastBottomToast)) {\r\n                    lastBottomToastHeight = lastBottomToast.getPosition().height;\r\n                }\r\n                let calculatedPosition: number;\r\n                if (toastConfig.position.bottom) {\r\n                    calculatedPosition = (this.openBottomToasts.length * lastBottomToastHeight) +\r\n                        toastConfig.position.bottom;\r\n                } else {\r\n                    calculatedPosition = (this.openBottomToasts.length * lastBottomToastHeight);\r\n                }\r\n                overlayPosition.bottom(calculatedPosition + 'px');\r\n            }\r\n        }\r\n\r\n        if (toastConfig.horizontalPosition === 'center') {\r\n            overlayPosition.centerHorizontally();\r\n        } else {\r\n            if (toastConfig.horizontalPosition === 'right') {\r\n                if (toastConfig.position.right) {\r\n                    overlayPosition.right(toastConfig.position.right + 'px');\r\n                } else {\r\n                    overlayPosition.right(DEFAULT_MARGIN + 'px');\r\n                }\r\n            }\r\n\r\n            if (toastConfig.horizontalPosition === 'left') {\r\n                if (toastConfig.position.left) {\r\n                    overlayPosition.left(toastConfig.position.left + 'px');\r\n                } else {\r\n                    overlayPosition.left(DEFAULT_MARGIN + 'px');\r\n                }\r\n            }\r\n        }\r\n\r\n        return overlayPosition;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UmbraToastComponent } from './umbra-toast.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport {\r\n    MatIconModule,\r\n    MatProgressBarModule\r\n} from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { UmbraToastService } from '../shared/services/umbra-toast.service';\r\n\r\n@NgModule({\r\n    declarations: [ UmbraToastComponent ],\r\n    imports: [\r\n        CommonModule,\r\n        OverlayModule,\r\n        MatIconModule,\r\n        FlexLayoutModule,\r\n        MatProgressBarModule\r\n    ],\r\n    entryComponents: [ UmbraToastComponent ],\r\n    providers: [UmbraToastService]\r\n})\r\nexport class UmbraToastModule {}\r\n","<div class=\"umbra-messages-inline\">\r\n    <ng-template [ngIf]=\"!groupMessages\" [ngIfElse]=\"groupMessageContainer\">\r\n        <ng-template ngFor [ngForOf]=\"umbraMessages\" let-message>\r\n            <ng-container *ngTemplateOutlet=\"inlineMessage;context:{message: message}\"></ng-container>\r\n        </ng-template>\r\n    </ng-template>\r\n    <ng-template #groupMessageContainer>\r\n        <div class=\"umbra-inline-group-message-container\">\r\n            <ng-template ngFor [ngForOf]=\"umbraMessages\" let-message>\r\n                <ng-container *ngTemplateOutlet=\"inlineMessage;context:{message: message}\"></ng-container>\r\n            </ng-template>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n\r\n<ng-template #inlineMessage let-message=\"message\">\r\n    <div [ngClass]=\"{\r\n     'umbra-inline-group-message': groupMessages,\r\n     'umbra-inline-message': !groupMessages,\r\n     'umbra-messaging-error': message['type'] === 'error',\r\n     'umbra-messaging-info': message['type'] === 'info',\r\n     'umbra-messaging-warning': message['type'] === 'warning',\r\n     'umbra-messaging-success': message['type'] === 'success'\r\n     }\">\r\n        <span *ngIf=\"message['icon']\" class=\"umbra-inline-group-message-icon\">\r\n            <mat-icon>{{ message['icon'] }}</mat-icon>\r\n        </span>\r\n        <span *ngIf=\"message['title']\" class=\"umbra-inline-group-message-title\">{{ message['title'] }}:</span>\r\n        <span *ngIf=\"message['summary']\" class=\"umbra-inline-group-message-summary\"> {{ message['summary'] }}</span>\r\n    </div>\r\n</ng-template>\r\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit\n} from '@angular/core';\nimport { InlineMessage } from 'lib/lib/shared/classes/inline-message';\n\n@Component({\n  selector: 'umbra-messaging-inline',\n  templateUrl: './umbra-inline.component.html',\n  styleUrls: ['./umbra-inline.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UmbraInlineComponent implements OnInit {\n  @Input() umbraMessages: Array<InlineMessage> = [];\n  @Input() groupMessages = false;\n  @Input() shouldTimeout = false;\n  @Input() setTimeout = 2500;\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.shouldTimeout) {\n      // TODO(Tim): Set a timeout on showing the messages.\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UmbraInlineComponent } from './umbra-inline.component';\nimport { MatIconModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [UmbraInlineComponent],\n  imports: [\n    MatIconModule,\n    FlexLayoutModule,\n    CommonModule\n  ],\n  exports: [UmbraInlineComponent]\n})\nexport class UmbraInlineModule { }\n","/*\r\n * Public API Surface of umbra-messaging\r\n */\r\nexport * from './lib/shared/services/umbra-toast.service';\r\nexport * from './lib/umbra-toast/umbra-toast.module';\r\nexport * from './lib/umbra-toast/umbra-toast.component';\r\nexport * from './lib/umbra-inline/umbra-inline.module';\r\nexport * from './lib/umbra-inline/umbra-inline.component';\r\nexport * from './lib/shared/classes/toast-config';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵselect","i0.ɵɵtextInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainer","isDefAndNotNull"],"mappings":"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"}