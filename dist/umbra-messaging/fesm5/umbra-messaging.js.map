{"version":3,"file":"umbra-messaging.js","sources":["ng://umbra-messaging/lib/shared/classes/toast-ref.ts","ng://umbra-messaging/lib/shared/classes/toast-config.ts","ng://umbra-messaging/lib/shared/animations/toast-fade.animation.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.component.ts","ng://umbra-messaging/lib/shared/services/umbra-toast.service.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.module.ts","ng://umbra-messaging/lib/shared/interfaces/toast-config.interface.ts"],"sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ToastRef {\n    constructor(private readonly overlay: OverlayRef) { }\n\n    close() {\n        this.overlay.dispose();\n    }\n\n    isVisible() {\n        return this.overlay && this.overlay.overlayElement;\n    }\n\n    getPosition() {\n        return this.overlay.overlayElement.getBoundingClientRect();\n    }\n}\n","import { InjectionToken, TemplateRef } from '@angular/core';\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\nimport { ToastType } from '../types/toast.type';\n\nexport class ToastData {\n    type: ToastType;\n    text?: string;\n    template?: TemplateRef<any>;\n    templateContext?: {};\n}\n\nexport const defaultToastConfig: ToastConfigInterface = {\n    position: {\n        top: 20,\n        right: 20,\n    },\n    animation: {\n        fadeOut: 2500,\n        fadeIn: 300,\n    },\n};\n\nexport const TOAST_CONFIG_TOKEN = new InjectionToken<ToastConfigInterface>('toast-config');\n","import {\n    AnimationTriggerMetadata,\n    trigger,\n    state,\n    transition,\n    style,\n    animate,\n} from '@angular/animations';\n\nexport const toastAnimations: {\n    readonly fadeToast: AnimationTriggerMetadata;\n} = {\n    fadeToast: trigger('fadeAnimation', [\n        state('default', style({ opacity: 1 })),\n        transition('void => *', [style({ opacity: 0 }), animate('{{ fadeIn }}ms')]),\n        transition(\n            'default => closing',\n            animate('{{ fadeOut }}ms', style({ opacity: 0 })),\n        ),\n    ]),\n};\n\nexport type ToastAnimationState = 'default' | 'closing';\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject,\n  OnDestroy\n} from '@angular/core';\nimport {\n  TOAST_CONFIG_TOKEN,\n  ToastData\n} from '../shared/classes/toast-config';\nimport { ToastRef } from '../shared/classes/toast-ref';\nimport { ToastConfigInterface } from '../shared/interfaces/toast-config.interface';\nimport {\n  toastAnimations,\n  ToastAnimationState\n} from '../shared/animations/toast-fade.animation';\nimport { AnimationEvent } from '@angular/animations';\n\n@Component({\n  selector: 'umbra-messaging-toast',\n  templateUrl: './umbra-toast.component.html',\n  styleUrls: ['./umbra-toast.component.css'],\n  animations: [toastAnimations.fadeToast],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UmbraToastComponent implements OnInit, OnDestroy {\n  animationState: ToastAnimationState = 'default';\n  iconType: string;\n\n  private intervalId: number;\n\n  constructor(\n      readonly data: ToastData,\n      readonly ref: ToastRef\n  ) {\n    this.iconType = data.type === 'success' ? 'done' : data.type;\n  }\n\n  ngOnInit() {\n    this.intervalId = setTimeout(() => this.animationState = 'closing', 5000);\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.intervalId);\n  }\n\n  close() {\n    this.ref.close();\n  }\n\n  onFadeFinished(event: AnimationEvent) {\n    const { toState } = event;\n    const isFadeOut = (toState as ToastAnimationState) === 'closing';\n    const itFinished = this.animationState === 'closing';\n\n    if (isFadeOut && itFinished) {\n      this.close();\n    }\n  }\n}\n","import {\n  Inject,\n  Injectable,\n  Injector\n} from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport {\n  ComponentPortal,\n  PortalInjector\n} from '@angular/cdk/portal';\nimport { ToastRef } from '../classes/toast-ref';\nimport {\n  defaultToastConfig,\n  TOAST_CONFIG_TOKEN,\n  ToastData\n} from '../classes/toast-config';\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\nimport { UmbraToastComponent } from '../../umbra-toast/umbra-toast.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UmbraToastService {\n  private lastToast: ToastRef;\n  private toastConfig: ToastConfigInterface;\n\n  constructor(\n      private overlay: Overlay,\n      private parentInjector: Injector\n  ) {}\n\n  showToast(toastData: ToastData, toastConfig?: ToastConfigInterface) {\n    if (toastConfig === null || toastConfig === undefined) {\n      this.toastConfig = defaultToastConfig;\n    }\n\n    const positionStrategy = this.getPositionStrategy();\n    const overlayRef = this.overlay.create({ positionStrategy });\n\n    const toastRef = new ToastRef(overlayRef);\n\n    const injector = this.getInjector(toastData, toastRef, this.parentInjector);\n    const toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\n\n    overlayRef.attach(toastPortal);\n\n    return toastRef;\n  }\n\n  getPositionStrategy() {\n    return this.overlay.position()\n        .global()\n        .top(this.getPosition())\n        .right(this.toastConfig.position.right + 'px');\n  }\n\n  getPosition() {\n    const lastToastIsVisible = this.lastToast && this.lastToast.isVisible();\n    const position = lastToastIsVisible\n        ? this.lastToast.getPosition().bottom\n        : this.toastConfig.position.top;\n\n    return position + 'px';\n  }\n\n  getInjector(data: ToastData, toastRef: ToastRef, parentInjector: Injector) {\n    const tokens = new WeakMap();\n\n    tokens.set(ToastData, data);\n    tokens.set(ToastRef, toastRef);\n\n    return new PortalInjector(parentInjector, tokens);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UmbraToastComponent } from './umbra-toast.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatIconModule } from '@angular/material';\n\n@NgModule({\n    declarations: [ UmbraToastComponent ],\n    imports: [\n        CommonModule,\n        OverlayModule,\n        MatIconModule\n    ],\n    entryComponents: [ UmbraToastComponent ]\n})\nexport class UmbraToastModule {}\n","export interface ToastConfigInterface {\n    position?: {\n        top: number;\n        right: number;\n    };\n    animation?: {\n        fadeOut: number;\n        fadeIn: number;\n    };\n}\n"],"names":[],"mappings":"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"}