{"version":3,"file":"umbra-messaging.umd.js","sources":["ng://umbra-messaging/lib/shared/classes/toast-ref.ts","ng://umbra-messaging/lib/shared/classes/toast-config.ts","ng://umbra-messaging/lib/shared/animations/toast-fade.animation.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.component.ts","ng://umbra-messaging/lib/shared/services/umbra-toast.service.ts","ng://umbra-messaging/lib/umbra-toast/umbra-toast.module.ts","ng://umbra-messaging/lib/shared/interfaces/toast-config.interface.ts"],"sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\r\n\r\nexport class ToastRef {\r\n    constructor(private readonly overlay: OverlayRef) { }\r\n\r\n    close() {\r\n        this.overlay.dispose();\r\n    }\r\n\r\n    isVisible() {\r\n        return this.overlay && this.overlay.overlayElement;\r\n    }\r\n\r\n    getPosition() {\r\n        return this.overlay.overlayElement.getBoundingClientRect();\r\n    }\r\n}\r\n","import { InjectionToken, TemplateRef } from '@angular/core';\r\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\r\nimport { ToastType } from '../types/toast.type';\r\n\r\nexport class ToastData {\r\n    type: ToastType;\r\n    text?: string;\r\n    template?: TemplateRef<any>;\r\n    templateContext?: {};\r\n}\r\n\r\nexport const defaultToastConfig: ToastConfigInterface = {\r\n    position: {\r\n        top: 20,\r\n        right: 20,\r\n    },\r\n    animation: {\r\n        fadeOut: 2500,\r\n        fadeIn: 300,\r\n    },\r\n    toastData: {\r\n        type: 'success'\r\n    }\r\n};\r\n\r\nexport const TOAST_CONFIG_TOKEN = new InjectionToken<ToastConfigInterface>('toast-config');\r\n","import {\r\n    AnimationTriggerMetadata,\r\n    trigger,\r\n    state,\r\n    transition,\r\n    style,\r\n    animate,\r\n} from '@angular/animations';\r\n\r\nexport const toastAnimations: {\r\n    readonly fadeToast: AnimationTriggerMetadata;\r\n} = {\r\n    fadeToast: trigger('fadeAnimation', [\r\n        state('default', style({ opacity: 1 })),\r\n        transition('void => *', [style({ opacity: 0 }), animate('{{ fadeIn }}ms')]),\r\n        transition(\r\n            'default => closing',\r\n            animate('{{ fadeOut }}ms', style({ opacity: 0 })),\r\n        ),\r\n    ]),\r\n};\r\n\r\nexport type ToastAnimationState = 'default' | 'closing';\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport {\r\n    ToastData\r\n} from '../shared/classes/toast-config';\r\nimport { ToastRef } from '../shared/classes/toast-ref';\r\nimport {\r\n    toastAnimations,\r\n    ToastAnimationState\r\n} from '../shared/animations/toast-fade.animation';\r\nimport { AnimationEvent } from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'umbra-messaging-toast',\r\n    templateUrl: './umbra-toast.component.html',\r\n    styleUrls: [ './umbra-toast.component.css' ],\r\n    animations: [ toastAnimations.fadeToast ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UmbraToastComponent implements OnInit, OnDestroy {\r\n    animationState: ToastAnimationState = 'default';\r\n    iconType: string;\r\n\r\n    private intervalId: number;\r\n\r\n    constructor(\r\n        readonly data: ToastData,\r\n        readonly ref: ToastRef\r\n    ) {\r\n        this.iconType = data.type === 'success' ? 'done' : data.type;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.intervalId = setTimeout(() => this.animationState = 'closing', 5000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearTimeout(this.intervalId);\r\n    }\r\n\r\n    close() {\r\n        this.ref.close();\r\n    }\r\n\r\n    onFadeFinished(event: AnimationEvent) {\r\n        const {toState} = event;\r\n        const isFadeOut = (toState as ToastAnimationState) === 'closing';\r\n        const itFinished = this.animationState === 'closing';\r\n\r\n        if (isFadeOut && itFinished) {\r\n            this.close();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Inject,\r\n    Injectable,\r\n    Injector\r\n} from '@angular/core';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport {\r\n    ComponentPortal,\r\n    PortalInjector\r\n} from '@angular/cdk/portal';\r\nimport { ToastRef } from '../classes/toast-ref';\r\nimport {\r\n    defaultToastConfig,\r\n    ToastData\r\n} from '../classes/toast-config';\r\nimport { ToastConfigInterface } from '../interfaces/toast-config.interface';\r\nimport { UmbraToastComponent } from '../../umbra-toast/umbra-toast.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UmbraToastService {\r\n    private lastToast: ToastRef;\r\n    private toastConfig: ToastConfigInterface;\r\n\r\n    constructor(\r\n        private overlay: Overlay,\r\n        private parentInjector: Injector\r\n    ) {}\r\n\r\n    showToast(toastConfig: ToastConfigInterface) {\r\n        console.log('Config', toastConfig);\r\n        if (toastConfig === null || toastConfig === undefined) {\r\n            this.toastConfig = defaultToastConfig;\r\n        }\r\n\r\n        const positionStrategy = this.getPositionStrategy();\r\n        const overlayRef = this.overlay.create({positionStrategy});\r\n\r\n        const toastRef = new ToastRef(overlayRef);\r\n\r\n        const injector = this.getInjector(toastConfig.toastData, toastRef,\r\n            this.parentInjector);\r\n        const toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\r\n\r\n        overlayRef.attach(toastPortal);\r\n\r\n        return toastRef;\r\n    }\r\n\r\n    getPositionStrategy() {\r\n        return this.overlay.position()\r\n            .global()\r\n            .top(this.getPosition())\r\n            .right(this.toastConfig.position.right + 'px');\r\n    }\r\n\r\n    getPosition() {\r\n        const lastToastIsVisible = this.lastToast && this.lastToast.isVisible();\r\n        const position = lastToastIsVisible\r\n            ? this.lastToast.getPosition().bottom\r\n            : this.toastConfig.position.top;\r\n\r\n        return position + 'px';\r\n    }\r\n\r\n    getInjector(data: ToastData, toastRef: ToastRef, parentInjector: Injector) {\r\n        const tokens = new WeakMap();\r\n\r\n        tokens.set(ToastData, data);\r\n        tokens.set(ToastRef, toastRef);\r\n\r\n        return new PortalInjector(parentInjector, tokens);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UmbraToastComponent } from './umbra-toast.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n    declarations: [ UmbraToastComponent ],\r\n    imports: [\r\n        CommonModule,\r\n        OverlayModule,\r\n        MatIconModule\r\n    ],\r\n    entryComponents: [ UmbraToastComponent ]\r\n})\r\nexport class UmbraToastModule {}\r\n","import { ToastData } from '../classes/toast-config';\r\n\r\nexport interface ToastConfigInterface {\r\n    position?: {\r\n        top: number;\r\n        right: number;\r\n    };\r\n    animation?: {\r\n        fadeOut: number;\r\n        fadeIn: number;\r\n    };\r\n    toastData: ToastData;\r\n}\r\n"],"names":["InjectionToken","trigger","state","style","transition","animate","Component","ChangeDetectionStrategy","ComponentPortal","PortalInjector","Injectable","Overlay","Injector","NgModule","CommonModule","OverlayModule","MatIconModule"],"mappings":"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"}