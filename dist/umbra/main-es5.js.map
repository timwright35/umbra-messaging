{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/umbra-messaging/fesm5/umbra-messaging.js","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2J;AAC7F;AACQ;AACW;AAClC;AACG;;AAElD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EASV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAAE;AACb,6BAA6B,4DAAc;;AAE3C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,eAAe,mEAAO;AACtB,QAAQ,iEAAK,YAAY,iEAAK,EAAE,aAAa;AAC7C,QAAQ,sEAAU,eAAe,iEAAK,EAAE,aAAa,GAAG,mEAAO,IAAI,UAAU;AAC7E,QAAQ,sEAAU,uBAAuB,mEAAO,IAAI,WAAW,KAAK,iEAAK,EAAE,aAAa;AACxF;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,yCAAyC,EAAE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,sEAAsE,YAAY,wBAAwB,aAAa;AACvH;AACA,qCAAqC,qEAAuB;AAC5D,qCAAqC,kBAAkB,oBAAoB,aAAa,6BAA6B,mBAAmB,4BAA4B,YAAY,gBAAgB,iBAAiB,mBAAmB,kCAAkC,qCAAqC;AAC3S,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,kBAAkB;AAC3B,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAcV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,8CAA8C,qCAAqC;AACnF,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,8BAA8B,mEAAe;AAC7C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,kEAAc;AACjC;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,4DAAO,EAAE;AACzB,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN,2DAA2D,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,CAAC,4DAAO,GAAG,8DAAQ,CAAC,sDAAQ,GAAG,EAAE,gDAAgD;AACtP;AACA,CAAC;AACD,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,kEAAa;AACrC,wBAAwB,+DAAa;AACrC;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EAKV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEkI;AAClI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGClWA,8KAA8B,YAAtB;;wBAAqB;MAA7B,wBAA8B,uFAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGxC;AAAA;AAAA;IAQE,sBAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFxD,UAAK,GAAG,OAAO,CAAC;IAE2C,CAAC;IAE5D,gCAAS,GAAT;QACE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC/B,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,SAAS;SAChB,CAAC,CAAC;IACL,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAAA;IAYyB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { InjectionToken, Component, ChangeDetectionStrategy, Injectable, Injector, ɵɵdefineInjectable, ɵɵinject, INJECTOR, NgModule } from '@angular/core';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ToastRef = /** @class */ (function () {\n    function ToastRef(overlay) {\n        this.overlay = overlay;\n    }\n    /**\n     * @return {?}\n     */\n    ToastRef.prototype.close = /**\n     * @return {?}\n     */\n    function () {\n        this.overlay.dispose();\n    };\n    /**\n     * @return {?}\n     */\n    ToastRef.prototype.isVisible = /**\n     * @return {?}\n     */\n    function () {\n        return this.overlay && this.overlay.overlayElement;\n    };\n    /**\n     * @return {?}\n     */\n    ToastRef.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () {\n        return this.overlay.overlayElement.getBoundingClientRect();\n    };\n    return ToastRef;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ToastRef.prototype.overlay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ToastData = /** @class */ (function () {\n    function ToastData() {\n    }\n    return ToastData;\n}());\nif (false) {\n    /** @type {?} */\n    ToastData.prototype.type;\n    /** @type {?} */\n    ToastData.prototype.text;\n    /** @type {?} */\n    ToastData.prototype.template;\n    /** @type {?} */\n    ToastData.prototype.templateContext;\n}\n/** @type {?} */\nvar defaultToastConfig = {\n    position: {\n        top: 20,\n        right: 20,\n    },\n    animation: {\n        fadeOut: 2500,\n        fadeIn: 300,\n    },\n};\n/** @type {?} */\nvar TOAST_CONFIG_TOKEN = new InjectionToken('toast-config');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar toastAnimations = {\n    fadeToast: trigger('fadeAnimation', [\n        state('default', style({ opacity: 1 })),\n        transition('void => *', [style({ opacity: 0 }), animate('{{ fadeIn }}ms')]),\n        transition('default => closing', animate('{{ fadeOut }}ms', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar UmbraToastComponent = /** @class */ (function () {\n    function UmbraToastComponent(data, ref) {\n        this.data = data;\n        this.ref = ref;\n        this.animationState = 'default';\n        this.iconType = data.type === 'success' ? 'done' : data.type;\n    }\n    /**\n     * @return {?}\n     */\n    UmbraToastComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.intervalId = setTimeout((/**\n         * @return {?}\n         */\n        function () { return _this.animationState = 'closing'; }), 5000);\n    };\n    /**\n     * @return {?}\n     */\n    UmbraToastComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.intervalId);\n    };\n    /**\n     * @return {?}\n     */\n    UmbraToastComponent.prototype.close = /**\n     * @return {?}\n     */\n    function () {\n        this.ref.close();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    UmbraToastComponent.prototype.onFadeFinished = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var toState = event.toState;\n        /** @type {?} */\n        var isFadeOut = ((/** @type {?} */ (toState))) === 'closing';\n        /** @type {?} */\n        var itFinished = this.animationState === 'closing';\n        if (isFadeOut && itFinished) {\n            this.close();\n        }\n    };\n    UmbraToastComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'umbra-messaging-toast',\n                    template: \"<div class=\\\"toast\\\">\\n    <mat-icon>{{ iconType }}</mat-icon>\\n    <div>{{ data.text }}</div>\\n    <mat-icon (click)=\\\"close()\\\">close</mat-icon>\\n</div>\\n\",\n                    animations: [toastAnimations.fadeToast],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".toast{position:relative;display:-webkit-box;display:flex;justify-content:space-around;margin-bottom:20px;padding:10px 15px 10px 48px;width:290px;background:#fff;border-width:1px;border-style:solid;border-color:#ddd #d6d6d6 #cfcfcf;box-shadow:0 2px 4px rgba(0,0,0,.11)}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    UmbraToastComponent.ctorParameters = function () { return [\n        { type: ToastData },\n        { type: ToastRef }\n    ]; };\n    return UmbraToastComponent;\n}());\nif (false) {\n    /** @type {?} */\n    UmbraToastComponent.prototype.animationState;\n    /** @type {?} */\n    UmbraToastComponent.prototype.iconType;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastComponent.prototype.intervalId;\n    /** @type {?} */\n    UmbraToastComponent.prototype.data;\n    /** @type {?} */\n    UmbraToastComponent.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar UmbraToastService = /** @class */ (function () {\n    function UmbraToastService(overlay, parentInjector) {\n        this.overlay = overlay;\n        this.parentInjector = parentInjector;\n    }\n    /**\n     * @param {?} toastData\n     * @param {?=} toastConfig\n     * @return {?}\n     */\n    UmbraToastService.prototype.showToast = /**\n     * @param {?} toastData\n     * @param {?=} toastConfig\n     * @return {?}\n     */\n    function (toastData, toastConfig) {\n        if (toastConfig === null || toastConfig === undefined) {\n            this.toastConfig = defaultToastConfig;\n        }\n        /** @type {?} */\n        var positionStrategy = this.getPositionStrategy();\n        /** @type {?} */\n        var overlayRef = this.overlay.create({ positionStrategy: positionStrategy });\n        /** @type {?} */\n        var toastRef = new ToastRef(overlayRef);\n        /** @type {?} */\n        var injector = this.getInjector(toastData, toastRef, this.parentInjector);\n        /** @type {?} */\n        var toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\n        overlayRef.attach(toastPortal);\n        return toastRef;\n    };\n    /**\n     * @return {?}\n     */\n    UmbraToastService.prototype.getPositionStrategy = /**\n     * @return {?}\n     */\n    function () {\n        return this.overlay.position()\n            .global()\n            .top(this.getPosition())\n            .right(this.toastConfig.position.right + 'px');\n    };\n    /**\n     * @return {?}\n     */\n    UmbraToastService.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var lastToastIsVisible = this.lastToast && this.lastToast.isVisible();\n        /** @type {?} */\n        var position = lastToastIsVisible\n            ? this.lastToast.getPosition().bottom\n            : this.toastConfig.position.top;\n        return position + 'px';\n    };\n    /**\n     * @param {?} data\n     * @param {?} toastRef\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    UmbraToastService.prototype.getInjector = /**\n     * @param {?} data\n     * @param {?} toastRef\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (data, toastRef, parentInjector) {\n        /** @type {?} */\n        var tokens = new WeakMap();\n        tokens.set(ToastData, data);\n        tokens.set(ToastRef, toastRef);\n        return new PortalInjector(parentInjector, tokens);\n    };\n    UmbraToastService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    UmbraToastService.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: Injector }\n    ]; };\n    /** @nocollapse */ UmbraToastService.ngInjectableDef = ɵɵdefineInjectable({ factory: function UmbraToastService_Factory() { return new UmbraToastService(ɵɵinject(Overlay), ɵɵinject(INJECTOR)); }, token: UmbraToastService, providedIn: \"root\" });\n    return UmbraToastService;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.lastToast;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.toastConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.parentInjector;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar UmbraToastModule = /** @class */ (function () {\n    function UmbraToastModule() {\n    }\n    UmbraToastModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [UmbraToastComponent],\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MatIconModule\n                    ]\n                },] }\n    ];\n    return UmbraToastModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ToastConfigInterface() { }\nif (false) {\n    /** @type {?|undefined} */\n    ToastConfigInterface.prototype.position;\n    /** @type {?|undefined} */\n    ToastConfigInterface.prototype.animation;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UmbraToastModule, UmbraToastService, UmbraToastComponent as ɵa, toastAnimations as ɵb, ToastData as ɵc, ToastRef as ɵd };\n//# sourceMappingURL=umbra-messaging.js.map\n","<button (click)=\"showToast()\">Show toast</button>\n","import { Component } from '@angular/core';\nimport { UmbraToastService } from 'umbra-messaging';\n\n@Component({\n  selector: 'umbra-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'umbra';\n\n  constructor(private umbraToastService: UmbraToastService) {}\n\n  showToast() {\n    this.umbraToastService.showToast({\n      text: 'Toast message',\n      type: 'success',\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UmbraToastModule } from 'umbra-messaging';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    UmbraToastModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}