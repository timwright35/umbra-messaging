{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/umbra-messaging/fesm2015/umbra-messaging.js","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2J;AAC7F;AACQ;AACW;AAClC;AACG;;AAElD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAMV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EASV;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAAE;AACb,+BAA+B,4DAAc;;AAE7C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,eAAe,mEAAO;AACtB,QAAQ,iEAAK,YAAY,iEAAK,EAAE,aAAa;AAC7C,QAAQ,sEAAU,eAAe,iEAAK,EAAE,aAAa,GAAG,mEAAO,IAAI,UAAU;AAC7E,QAAQ,sEAAU,uBAAuB,mEAAO,IAAI,WAAW,KAAK,iEAAK,EAAE,aAAa;AACxF;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,UAAU;AACzB,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,kEAAkE,YAAY,wBAAwB,aAAa;AACnH;AACA,iCAAiC,qEAAuB;AACxD,iCAAiC,kBAAkB,oBAAoB,aAAa,6BAA6B,mBAAmB,4BAA4B,YAAY,gBAAgB,iBAAiB,mBAAmB,kCAAkC,qCAAqC;AACvS,aAAa;AACb;AACA;AACA;AACA,KAAK,kBAAkB;AACvB,KAAK;AACL;AACA,WAAW,EAcV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gDAAgD,mBAAmB;AACnE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gCAAgC,mEAAe;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,kEAAc;AACjC;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ;AACpB;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,CAAC,4DAAO,GAAG,8DAAQ,CAAC,sDAAQ,GAAG,EAAE,gDAAgD;AAClP,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,kEAAa;AACjC,oBAAoB,+DAAa;AACjC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EAKV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEkI;AAClI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGC5TA,8KAA8B,YAAtB;;wBAAqB;MAA7B,wBAA8B,uFAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQxC;AAAA;AAAO,MAAM,YAAY;IAGvB,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFxD,UAAK,GAAG,OAAO,CAAC;IAE2C,CAAC;IAE5D,SAAS;QACP,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAC/B,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,SAAS;SAChB,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDD;AAAA;AAAO,MAAM,SAAS;CAAI;;;;;;;;;;;;;AClB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { InjectionToken, Component, ChangeDetectionStrategy, Injectable, Injector, ɵɵdefineInjectable, ɵɵinject, INJECTOR, NgModule } from '@angular/core';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ToastRef {\n    /**\n     * @param {?} overlay\n     */\n    constructor(overlay) {\n        this.overlay = overlay;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.overlay.dispose();\n    }\n    /**\n     * @return {?}\n     */\n    isVisible() {\n        return this.overlay && this.overlay.overlayElement;\n    }\n    /**\n     * @return {?}\n     */\n    getPosition() {\n        return this.overlay.overlayElement.getBoundingClientRect();\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ToastRef.prototype.overlay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ToastData {\n}\nif (false) {\n    /** @type {?} */\n    ToastData.prototype.type;\n    /** @type {?} */\n    ToastData.prototype.text;\n    /** @type {?} */\n    ToastData.prototype.template;\n    /** @type {?} */\n    ToastData.prototype.templateContext;\n}\n/** @type {?} */\nconst defaultToastConfig = {\n    position: {\n        top: 20,\n        right: 20,\n    },\n    animation: {\n        fadeOut: 2500,\n        fadeIn: 300,\n    },\n};\n/** @type {?} */\nconst TOAST_CONFIG_TOKEN = new InjectionToken('toast-config');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst toastAnimations = {\n    fadeToast: trigger('fadeAnimation', [\n        state('default', style({ opacity: 1 })),\n        transition('void => *', [style({ opacity: 0 }), animate('{{ fadeIn }}ms')]),\n        transition('default => closing', animate('{{ fadeOut }}ms', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UmbraToastComponent {\n    /**\n     * @param {?} data\n     * @param {?} ref\n     */\n    constructor(data, ref) {\n        this.data = data;\n        this.ref = ref;\n        this.animationState = 'default';\n        this.iconType = data.type === 'success' ? 'done' : data.type;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.intervalId = setTimeout((/**\n         * @return {?}\n         */\n        () => this.animationState = 'closing'), 5000);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this.intervalId);\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.ref.close();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onFadeFinished(event) {\n        const { toState } = event;\n        /** @type {?} */\n        const isFadeOut = ((/** @type {?} */ (toState))) === 'closing';\n        /** @type {?} */\n        const itFinished = this.animationState === 'closing';\n        if (isFadeOut && itFinished) {\n            this.close();\n        }\n    }\n}\nUmbraToastComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'umbra-messaging-toast',\n                template: \"<div class=\\\"toast\\\">\\n    <mat-icon>{{ iconType }}</mat-icon>\\n    <div>{{ data.text }}</div>\\n    <mat-icon (click)=\\\"close()\\\">close</mat-icon>\\n</div>\\n\",\n                animations: [toastAnimations.fadeToast],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".toast{position:relative;display:-webkit-box;display:flex;justify-content:space-around;margin-bottom:20px;padding:10px 15px 10px 48px;width:290px;background:#fff;border-width:1px;border-style:solid;border-color:#ddd #d6d6d6 #cfcfcf;box-shadow:0 2px 4px rgba(0,0,0,.11)}\"]\n            }] }\n];\n/** @nocollapse */\nUmbraToastComponent.ctorParameters = () => [\n    { type: ToastData },\n    { type: ToastRef }\n];\nif (false) {\n    /** @type {?} */\n    UmbraToastComponent.prototype.animationState;\n    /** @type {?} */\n    UmbraToastComponent.prototype.iconType;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastComponent.prototype.intervalId;\n    /** @type {?} */\n    UmbraToastComponent.prototype.data;\n    /** @type {?} */\n    UmbraToastComponent.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UmbraToastService {\n    /**\n     * @param {?} overlay\n     * @param {?} parentInjector\n     */\n    constructor(overlay, parentInjector) {\n        this.overlay = overlay;\n        this.parentInjector = parentInjector;\n    }\n    /**\n     * @param {?} toastData\n     * @param {?=} toastConfig\n     * @return {?}\n     */\n    showToast(toastData, toastConfig) {\n        if (toastConfig === null || toastConfig === undefined) {\n            this.toastConfig = defaultToastConfig;\n        }\n        /** @type {?} */\n        const positionStrategy = this.getPositionStrategy();\n        /** @type {?} */\n        const overlayRef = this.overlay.create({ positionStrategy });\n        /** @type {?} */\n        const toastRef = new ToastRef(overlayRef);\n        /** @type {?} */\n        const injector = this.getInjector(toastData, toastRef, this.parentInjector);\n        /** @type {?} */\n        const toastPortal = new ComponentPortal(UmbraToastComponent, null, injector);\n        overlayRef.attach(toastPortal);\n        return toastRef;\n    }\n    /**\n     * @return {?}\n     */\n    getPositionStrategy() {\n        return this.overlay.position()\n            .global()\n            .top(this.getPosition())\n            .right(this.toastConfig.position.right + 'px');\n    }\n    /**\n     * @return {?}\n     */\n    getPosition() {\n        /** @type {?} */\n        const lastToastIsVisible = this.lastToast && this.lastToast.isVisible();\n        /** @type {?} */\n        const position = lastToastIsVisible\n            ? this.lastToast.getPosition().bottom\n            : this.toastConfig.position.top;\n        return position + 'px';\n    }\n    /**\n     * @param {?} data\n     * @param {?} toastRef\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    getInjector(data, toastRef, parentInjector) {\n        /** @type {?} */\n        const tokens = new WeakMap();\n        tokens.set(ToastData, data);\n        tokens.set(ToastRef, toastRef);\n        return new PortalInjector(parentInjector, tokens);\n    }\n}\nUmbraToastService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nUmbraToastService.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector }\n];\n/** @nocollapse */ UmbraToastService.ngInjectableDef = ɵɵdefineInjectable({ factory: function UmbraToastService_Factory() { return new UmbraToastService(ɵɵinject(Overlay), ɵɵinject(INJECTOR)); }, token: UmbraToastService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.lastToast;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.toastConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    UmbraToastService.prototype.parentInjector;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UmbraToastModule {\n}\nUmbraToastModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [UmbraToastComponent],\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatIconModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ToastConfigInterface() { }\nif (false) {\n    /** @type {?|undefined} */\n    ToastConfigInterface.prototype.position;\n    /** @type {?|undefined} */\n    ToastConfigInterface.prototype.animation;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UmbraToastModule, UmbraToastService, UmbraToastComponent as ɵa, toastAnimations as ɵb, ToastData as ɵc, ToastRef as ɵd };\n//# sourceMappingURL=umbra-messaging.js.map\n","<button (click)=\"showToast()\">Show toast</button>\n","import { Component } from '@angular/core';\nimport { UmbraToastService } from 'umbra-messaging';\n\n@Component({\n  selector: 'umbra-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'umbra';\n\n  constructor(private umbraToastService: UmbraToastService) {}\n\n  showToast() {\n    this.umbraToastService.showToast({\n      text: 'Toast message',\n      type: 'success',\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UmbraToastModule } from 'umbra-messaging';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    UmbraToastModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}